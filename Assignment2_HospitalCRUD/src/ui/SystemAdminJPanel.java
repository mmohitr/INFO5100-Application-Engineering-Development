/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.Hospital;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;
import model.VitalSignsHistory;

/**
 *
 * @author mohit
 */
public class SystemAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminJPanel
     */
    PatientDirectory pd;
    DoctorDirectory dd;
    EncounterHistory eh;
    VitalSignsHistory vsh;
    JSplitPane sp;
    HospitalDirectory hd;

    String updatedName;
    String updatedPhNo;
    String updatedGender;
    int updatedAge;
    Date updatedDob;
    String updatedRole;
    String updatedCity;
    int updatedHeight;
    int updatedWeight;
    String updatedEmailId;
    String updatedPassword;
    
    String updatedName1;
    String updatedPhNo1;
    String updatedGender1;
    int updatedAge1;
    Date updatedDob1;
    String updatedRole1;
    String updatedSpeciality;
    int updatedYearsOfExp;
    String updatedHospital;
    String updatedArea;
    String updatedEmailId1;
    String updatedPassword1;
    
    String hosName;
    String hosCommunity;
    String hosCity;
    
    String patientName;
    String doctorName;
    Date enDate;
    String enInfo;
    
    public SystemAdminJPanel(PatientDirectory pd, DoctorDirectory dd, EncounterHistory eh, VitalSignsHistory vsh, JSplitPane sp, HospitalDirectory hd) {
        initComponents();
        
        this.pd = pd;
        this.dd = dd;
        this.eh = eh;
        this.vsh = vsh;
        this.sp = sp;
        this.hd = hd;
        
        initialSetup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCreatePatient = new javax.swing.JButton();
        btnCreateHospital = new javax.swing.JButton();
        btnCreateEncounter = new javax.swing.JButton();
        btnViewPatients = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        btnViewUpdatePatient = new javax.swing.JButton();
        txtAge = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblEmailId = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtEmailId = new javax.swing.JTextField();
        boxGender = new javax.swing.JComboBox<>();
        lblName = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        boxDob = new com.toedter.calendar.JDateChooser();
        lblGender = new javax.swing.JLabel();
        lblPhoneNo = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        btnUpdatePatient = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();
        btnViewDoctors = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDoctors = new javax.swing.JTable();
        btnViewUpdateDoctors = new javax.swing.JButton();
        btnDeleteDoctors = new javax.swing.JButton();
        txtEmailId1 = new javax.swing.JTextField();
        boxGender1 = new javax.swing.JComboBox<>();
        lblName1 = new javax.swing.JLabel();
        lblDob1 = new javax.swing.JLabel();
        lblAge1 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        boxDob1 = new com.toedter.calendar.JDateChooser();
        lblGender1 = new javax.swing.JLabel();
        lblPhoneNo1 = new javax.swing.JLabel();
        txtAge1 = new javax.swing.JTextField();
        txtPhoneNo1 = new javax.swing.JTextField();
        lblPassword1 = new javax.swing.JLabel();
        lblEmailId1 = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JPasswordField();
        lblHospital = new javax.swing.JLabel();
        txtSpeciality = new javax.swing.JTextField();
        txtYearsOfExp = new javax.swing.JTextField();
        txtHospital = new javax.swing.JTextField();
        lblSpeciality = new javax.swing.JLabel();
        lblYearsOfExp = new javax.swing.JLabel();
        lblArea = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        btnUpdateDoctor = new javax.swing.JButton();
        btnViewHospitals = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHospitals = new javax.swing.JTable();
        btnViewUpdateHospitals = new javax.swing.JButton();
        btnDeleteHospital = new javax.swing.JButton();
        lblHosCommunity = new javax.swing.JLabel();
        txtHosCommunity = new javax.swing.JTextField();
        lblHosCity = new javax.swing.JLabel();
        btnAddHospital = new javax.swing.JButton();
        btnUpdateHospital = new javax.swing.JButton();
        lblHosName = new javax.swing.JLabel();
        txtHosName = new javax.swing.JTextField();
        txtHosCity = new javax.swing.JTextField();
        btnViewEncounters = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        btnViewUpdateEncounter = new javax.swing.JButton();
        btnDeleteEncounter = new javax.swing.JButton();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblEnDate = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblEnInfo = new javax.swing.JLabel();
        txtEnInfo = new javax.swing.JTextField();
        boxEnDate = new com.toedter.calendar.JDateChooser();
        btnAddEncounter = new javax.swing.JButton();
        btnUpdateEncounter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCreatePatient.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnCreatePatient.setText("Create New User");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });
        add(btnCreatePatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 160, -1));

        btnCreateHospital.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnCreateHospital.setText("Create Hospital");
        btnCreateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospitalActionPerformed(evt);
            }
        });
        add(btnCreateHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 40, 160, -1));

        btnCreateEncounter.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnCreateEncounter.setText("Create Encounter");
        btnCreateEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEncounterActionPerformed(evt);
            }
        });
        add(btnCreateEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 70, 160, -1));

        btnViewPatients.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewPatients.setText("View Patients");
        btnViewPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientsActionPerformed(evt);
            }
        });
        add(btnViewPatients, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane1.setViewportView(tblPatients);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 47, 250, 100));

        btnViewUpdatePatient.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewUpdatePatient.setText("View/Update Details");
        btnViewUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUpdatePatientActionPerformed(evt);
            }
        });
        add(btnViewUpdatePatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 387, 150, -1));
        add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 479, 150, -1));

        lblPassword.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPassword.setText("Password:");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 526, -1, -1));

        lblEmailId.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblEmailId.setText("Email ID:");
        add(lblEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 291, -1, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 523, 150, -1));
        add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 288, 150, -1));

        boxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select a Gender", "Male", "Female", "Other" }));
        add(boxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 428, 150, -1));

        lblName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblName.setText("Name:");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 250, -1, -1));

        lblDob.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDob.setText("Date of Birth:");
        add(lblDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 335, -1, -1));

        lblAge.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 247, 150, -1));
        add(boxDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 329, 150, -1));

        lblGender.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 431, -1, -1));

        lblPhoneNo.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPhoneNo.setText("Cell Phone No:");
        add(lblPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 482, -1, -1));

        lblCity.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblCity.setText("City:");
        add(lblCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 649, -1, -1));
        add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 564, 150, -1));
        add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 605, 150, -1));
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 646, 150, -1));

        lblHeight.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHeight.setText("Height:");
        add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 567, -1, -1));

        lblWeight.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblWeight.setText("Weight:");
        add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 608, -1, -1));

        btnUpdatePatient.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnUpdatePatient.setText("Update Details");
        btnUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePatientActionPerformed(evt);
            }
        });
        add(btnUpdatePatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 700, -1, -1));

        btnDeletePatient.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnDeletePatient.setText("Delete");
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });
        add(btnDeletePatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, -1));

        btnViewDoctors.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewDoctors.setText("View Doctors");
        btnViewDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDoctorsActionPerformed(evt);
            }
        });
        add(btnViewDoctors, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));

        tblDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane2.setViewportView(tblDoctors);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 250, 100));

        btnViewUpdateDoctors.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewUpdateDoctors.setText("View/Update Details");
        btnViewUpdateDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUpdateDoctorsActionPerformed(evt);
            }
        });
        add(btnViewUpdateDoctors, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, -1, -1));

        btnDeleteDoctors.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnDeleteDoctors.setText("Delete");
        btnDeleteDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoctorsActionPerformed(evt);
            }
        });
        add(btnDeleteDoctors, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, -1, -1));
        add(txtEmailId1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 150, -1));

        boxGender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select a Gender", "Male", "Female", "Other" }));
        add(boxGender1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 410, 150, -1));

        lblName1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblName1.setText("Name:");
        add(lblName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, -1, -1));

        lblDob1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDob1.setText("Date of Birth:");
        add(lblDob1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, -1, -1));

        lblAge1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblAge1.setText("Age:");
        add(lblAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, -1, -1));

        txtName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName1ActionPerformed(evt);
            }
        });
        add(txtName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 150, -1));
        add(boxDob1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 150, -1));

        lblGender1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblGender1.setText("Gender:");
        add(lblGender1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 420, -1, -1));

        lblPhoneNo1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPhoneNo1.setText("Cell Phone No:");
        add(lblPhoneNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 480, -1, -1));

        txtAge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAge1ActionPerformed(evt);
            }
        });
        add(txtAge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 150, -1));
        add(txtPhoneNo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 150, -1));

        lblPassword1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPassword1.setText("Password:");
        add(lblPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 520, -1, -1));

        lblEmailId1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblEmailId1.setText("Email ID:");
        add(lblEmailId1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, -1, -1));
        add(txtPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 520, 150, -1));

        lblHospital.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHospital.setText("Hospital:");
        add(lblHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 650, -1, -1));
        add(txtSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 560, 150, -1));
        add(txtYearsOfExp, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 610, 150, -1));
        add(txtHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 650, 150, -1));

        lblSpeciality.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblSpeciality.setText("Speciality:");
        add(lblSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 560, -1, -1));

        lblYearsOfExp.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblYearsOfExp.setText("Years of Experience:");
        add(lblYearsOfExp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 610, -1, -1));

        lblArea.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblArea.setText("Area:");
        add(lblArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 690, -1, -1));
        add(txtArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 690, 150, -1));

        btnUpdateDoctor.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnUpdateDoctor.setText("Update Details");
        btnUpdateDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDoctorActionPerformed(evt);
            }
        });
        add(btnUpdateDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 740, -1, -1));

        btnViewHospitals.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewHospitals.setText("View Hospitals");
        btnViewHospitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHospitalsActionPerformed(evt);
            }
        });
        add(btnViewHospitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, -1, -1));

        tblHospitals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane3.setViewportView(tblHospitals);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 250, 100));

        btnViewUpdateHospitals.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewUpdateHospitals.setText("View/Update Details");
        btnViewUpdateHospitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUpdateHospitalsActionPerformed(evt);
            }
        });
        add(btnViewUpdateHospitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));

        btnDeleteHospital.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnDeleteHospital.setText("Delete");
        btnDeleteHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHospitalActionPerformed(evt);
            }
        });
        add(btnDeleteHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, -1, -1));

        lblHosCommunity.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHosCommunity.setText("Community:");
        add(lblHosCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, -1, -1));
        add(txtHosCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 290, 152, -1));

        lblHosCity.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHosCity.setText("City:");
        add(lblHosCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 330, -1, -1));

        btnAddHospital.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnAddHospital.setText("Add Hospital");
        btnAddHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHospitalActionPerformed(evt);
            }
        });
        add(btnAddHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 380, -1, -1));

        btnUpdateHospital.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnUpdateHospital.setText("Update Hospital");
        btnUpdateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHospitalActionPerformed(evt);
            }
        });
        add(btnUpdateHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 380, -1, -1));

        lblHosName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHosName.setText("Name:");
        add(lblHosName, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, -1, -1));
        add(txtHosName, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 250, 152, -1));
        add(txtHosCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 330, 152, -1));

        btnViewEncounters.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewEncounters.setText("View Encounters");
        btnViewEncounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncountersActionPerformed(evt);
            }
        });
        add(btnViewEncounters, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, -1, -1));

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encounters"
            }
        ));
        jScrollPane4.setViewportView(tblEncounters);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 480, 250, 100));

        btnViewUpdateEncounter.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewUpdateEncounter.setText("View/Update Details");
        btnViewUpdateEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUpdateEncounterActionPerformed(evt);
            }
        });
        add(btnViewUpdateEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 590, -1, -1));

        btnDeleteEncounter.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnDeleteEncounter.setText("Delete");
        btnDeleteEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncounterActionPerformed(evt);
            }
        });
        add(btnDeleteEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 590, -1, -1));

        lblDoctorName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDoctorName.setText("Doctor Name:");
        add(lblDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 680, -1, -1));
        add(txtDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 680, 150, -1));

        lblEnDate.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblEnDate.setText("Encounter Date:");
        add(lblEnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 720, -1, -1));

        lblPatientName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPatientName.setText("Patient Name:");
        add(lblPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 640, -1, -1));
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 640, 150, -1));

        lblEnInfo.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblEnInfo.setText("Info:");
        add(lblEnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 760, -1, -1));
        add(txtEnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 760, 150, -1));
        add(boxEnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 720, 150, -1));

        btnAddEncounter.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnAddEncounter.setText("Add Encounter");
        btnAddEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEncounterActionPerformed(evt);
            }
        });
        add(btnAddEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 810, -1, -1));

        btnUpdateEncounter.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnUpdateEncounter.setText("Update Encounter");
        btnUpdateEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEncounterActionPerformed(evt);
            }
        });
        add(btnUpdateEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 810, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/mohit/Desktop/INFO5100 (14259) Application Engineering and Development /Rayalacheruvu_Maruti_002109594/Assignment2_HospitalCRUD/images/home.png")); // NOI18N
        jLabel1.setText("");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 1010));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:
        SignupJPanel signupView = new SignupJPanel(pd, dd);
        sp.setRightComponent(signupView);
    }//GEN-LAST:event_btnCreatePatientActionPerformed

    private void btnViewPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientsActionPerformed
        // TODO add your handling code here:
        populatePatients();
    }//GEN-LAST:event_btnViewPatientsActionPerformed

    private void btnViewUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUpdatePatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatients.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a person to view their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        Patient p= (Patient) model.getValueAt(selectedRowIndex, 0);
        
//        Patient p = pd.getPatient(selectedPatient);
        lblName.setVisible(true);
        txtName.setVisible(true);
        lblEmailId.setVisible(true);
        txtEmailId.setVisible(true);
        lblDob.setVisible(true);
        boxDob.setVisible(true);
        lblAge.setVisible(true);
        txtAge.setVisible(true);
        lblGender.setVisible(true);
        boxGender.setVisible(true);
        lblPhoneNo.setVisible(true);
        txtPhoneNo.setVisible(true);
        lblPassword.setVisible(true);
        txtPassword.setVisible(true);
        lblHeight.setVisible(true);
        txtHeight.setVisible(true);
        lblWeight.setVisible(true);     
        txtWeight.setVisible(true);
        lblCity.setVisible(true);
        txtCity.setVisible(true);
        btnUpdatePatient.setVisible(true);
        
        txtName.setText(p.getName());
        txtEmailId.setText(p.getEmailId());
        boxDob.setDate(p.getDob());
        txtAge.setText(String.valueOf(p.getAge()));
        boxGender.setSelectedItem(p.getGender());
        txtPhoneNo.setText(p.getPhNo());
        txtPassword.setText(p.getPassword());
        txtHeight.setText(String.valueOf(p.getHeight()));
        txtWeight.setText(String.valueOf(p.getWeight()));
        txtCity.setText(p.getCity());
    }//GEN-LAST:event_btnViewUpdatePatientActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatients.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a person to view their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        Patient p= (Patient) model.getValueAt(selectedRowIndex, 0);
        try{
            updatedName = txtName.getText();
            updatedEmailId = txtEmailId.getText();
            updatedDob = boxDob.getDate();
            updatedAge = Integer.parseInt(txtAge.getText());
            updatedGender = boxGender.getSelectedItem().toString();
            updatedPhNo = txtPhoneNo.getText();
            updatedPassword = String.valueOf(txtPassword.getPassword());
            updatedHeight = Integer.parseInt(txtHeight.getText());
            updatedWeight = Integer.parseInt(txtWeight.getText());
            updatedCity = txtCity.getText();
            if(patientUpdateValidation()){
                p.setName(txtName.getText());
                p.setEmailId(txtEmailId.getText());
                p.setDob(boxDob.getDate());
                p.setAge(Integer.parseInt(txtAge.getText()));
                p.setGender(boxGender.getSelectedItem().toString());
                p.setPhNo(txtPhoneNo.getText());
                p.setPassword(String.valueOf(txtPassword.getPassword()));
                p.setHeight(Integer.parseInt(txtHeight.getText()));
                p.setWeight(Integer.parseInt(txtWeight.getText()));
                p.setCity(txtCity.getText());
                JOptionPane.showMessageDialog(this, "Patient details updated");
                populatePatients();
                initialSetup();
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnUpdatePatientActionPerformed

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatients.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        pd.deletePatient(selectedPatient);

        JOptionPane.showMessageDialog(this, "Patient deleted");

        populatePatients();
        initialSetup();
    }//GEN-LAST:event_btnDeletePatientActionPerformed

    private void btnViewDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDoctorsActionPerformed
        // TODO add your handling code here:
        populateDoctors();
    }//GEN-LAST:event_btnViewDoctorsActionPerformed

    private void btnViewUpdateDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUpdateDoctorsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctors.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a person to view their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
        Doctor d= (Doctor) model.getValueAt(selectedRowIndex, 0);
        
        lblName1.setVisible(true);
        txtName1.setVisible(true);
        lblEmailId1.setVisible(true);
        txtEmailId1.setVisible(true);
        lblDob1.setVisible(true);
        boxDob1.setVisible(true);
        lblAge1.setVisible(true);
        txtAge1.setVisible(true);
        lblGender1.setVisible(true);
        boxGender1.setVisible(true);
        lblPhoneNo1.setVisible(true);
        txtPhoneNo1.setVisible(true);
        lblPassword1.setVisible(true);
        txtPassword1.setVisible(true);
        lblSpeciality.setVisible(true);
        txtSpeciality.setVisible(true);
        lblYearsOfExp.setVisible(true);     
        txtYearsOfExp.setVisible(true);
        lblHospital.setVisible(true);
        txtHospital.setVisible(true);
        lblArea.setVisible(true);
        txtArea.setVisible(true);
        btnUpdateDoctor.setVisible(true);
        
        txtName1.setText(d.getName());
        txtEmailId1.setText(d.getEmailId());
        boxDob1.setDate(d.getDob());
        txtAge1.setText(String.valueOf(d.getAge()));
        boxGender1.setSelectedItem(d.getGender());
        txtPhoneNo1.setText(d.getPhNo());
        txtPassword1.setText(d.getPassword());
        txtSpeciality.setText(d.getSpeciality());
        txtYearsOfExp.setText(String.valueOf(d.getYearsOfExp()));
        txtHospital.setText(d.getHospital());
        txtArea.setText(d.getArea());
    }//GEN-LAST:event_btnViewUpdateDoctorsActionPerformed

    private void btnDeleteDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoctorsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctors.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);

        dd.deleteDoctor(selectedDoctor);

        JOptionPane.showMessageDialog(this, "Doctor deleted");

        populateDoctors();
        initialSetup();
    }//GEN-LAST:event_btnDeleteDoctorsActionPerformed

    private void txtName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtName1ActionPerformed

    private void txtAge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAge1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAge1ActionPerformed

    private void btnUpdateDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDoctorActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctors.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a doctor to view their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
        Doctor d= (Doctor) model.getValueAt(selectedRowIndex, 0);
        try{
            updatedName1 = txtName1.getText();
            updatedEmailId1 = txtEmailId1.getText();
            updatedDob1 = boxDob1.getDate();
            updatedAge1 = Integer.parseInt(txtAge1.getText());
            updatedGender1 = boxGender1.getSelectedItem().toString();
            updatedPhNo1 = txtPhoneNo1.getText();
            updatedPassword1 = String.valueOf(txtPassword1.getPassword());
            updatedSpeciality = txtSpeciality.getText();
            updatedYearsOfExp = Integer.parseInt(txtYearsOfExp.getText());
            updatedHospital = txtHospital.getText();
            updatedArea = txtArea.getText();
            if(doctorUpdateValidation()){
                d.setName(txtName1.getText());
                d.setEmailId(txtEmailId1.getText());
                d.setDob(boxDob1.getDate());
                d.setAge(Integer.parseInt(txtAge1.getText()));
                d.setGender(boxGender1.getSelectedItem().toString());
                d.setPhNo(txtPhoneNo1.getText());
                d.setPassword(String.valueOf(txtPassword1.getPassword()));
                d.setSpeciality(txtSpeciality.getText());
                d.setYearsOfExp(Integer.parseInt(txtYearsOfExp.getText()));
                d.setHospital(txtHospital.getText());
                d.setArea(txtArea.getText());
                JOptionPane.showMessageDialog(this, "Doctor details updated");
                populateDoctors();
                initialSetup();
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
        
    }//GEN-LAST:event_btnUpdateDoctorActionPerformed

    private void btnViewHospitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHospitalsActionPerformed
        // TODO add your handling code here:
        populateHospitals();
    }//GEN-LAST:event_btnViewHospitalsActionPerformed

    private void btnViewUpdateHospitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUpdateHospitalsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblHospitals.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a hospital to view its details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblHospitals.getModel();
        Hospital h= (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        lblHosName.setVisible(true);
        txtHosName.setVisible(true);
        lblHosCommunity.setVisible(true);
        txtHosCommunity.setVisible(true);
        lblHosCity.setVisible(true);
        txtHosCity.setVisible(true);
        btnUpdateHospital.setVisible(true);
        
        txtHosName.setText(h.getName());
        txtHosCommunity.setText(h.getCommunity());
        txtHosCity.setText(h.getCity());
    }//GEN-LAST:event_btnViewUpdateHospitalsActionPerformed

    private void btnDeleteHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblHospitals.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a hospital to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblHospitals.getModel();
        Hospital selectedHospital = (Hospital) model.getValueAt(selectedRowIndex, 0);

        hd.deleteHospital(selectedHospital);

        JOptionPane.showMessageDialog(this, "Hospital deleted");

        populateHospitals();
        initialSetup();
    }//GEN-LAST:event_btnDeleteHospitalActionPerformed

    private void btnCreateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospitalActionPerformed
        // TODO add your handling code here:
        lblHosName.setVisible(true);
        txtHosName.setVisible(true);
        lblHosCommunity.setVisible(true);
        txtHosCommunity.setVisible(true);
        lblHosCity.setVisible(true);
        txtHosCity.setVisible(true);
        btnAddHospital.setVisible(true);
    }//GEN-LAST:event_btnCreateHospitalActionPerformed

    private void btnAddHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHospitalActionPerformed
        // TODO add your handling code here:
        try{
            hosName = txtHosName.getText();
            hosCommunity = txtHosCommunity.getText();
            hosCity = txtHosCity.getText();
            
            if(hospitalValidation()){
                Hospital h = hd.addNewHospital();
                h.setName(txtHosName.getText());
                h.setCommunity(txtHosCommunity.getText());
                h.setCity(txtHosCity.getText());
                initialSetup();
                JOptionPane.showMessageDialog(this, "Hospital added");
                populateHospitals();
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnAddHospitalActionPerformed

    private void btnUpdateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHospitalActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblHospitals.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a hospital to update their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblHospitals.getModel();
        Hospital h= (Hospital) model.getValueAt(selectedRowIndex, 0);
        try{
            hosName = txtHosName.getText();
            hosCommunity = txtHosCommunity.getText();
            hosCity = txtHosCity.getText();
            
            if(hospitalValidation()){
                h.setName(txtHosName.getText());
                h.setCommunity(txtHosCommunity.getText());
                h.setCity(txtHosCity.getText());
                initialSetup();
                JOptionPane.showMessageDialog(this, "Hospital updated");
                populateHospitals();
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnUpdateHospitalActionPerformed

    private void btnViewEncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncountersActionPerformed
        // TODO add your handling code here:
        populateEncounters();
    }//GEN-LAST:event_btnViewEncountersActionPerformed

    private void btnViewUpdateEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUpdateEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a person to view their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        Encounter e= (Encounter) model.getValueAt(selectedRowIndex, 0);
        
        lblPatientName.setVisible(true);
        txtPatientName.setVisible(true);
        lblDoctorName.setVisible(true);
        txtDoctorName.setVisible(true);
        lblEnDate.setVisible(true);
        boxEnDate.setVisible(true);
        lblEnInfo.setVisible(true);
        txtEnInfo.setVisible(true);
        btnUpdateEncounter.setVisible(true);
        
        txtPatientName.setText(e.getPatientName());
        txtDoctorName.setText(e.getDoctorName());
        boxEnDate.setDate(e.getDate());
        txtEnInfo.setText(e.getInfo());
    }//GEN-LAST:event_btnViewUpdateEncounterActionPerformed

    private void btnDeleteEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select an encounter to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);

        eh.deleteEncounter(selectedEncounter);

        JOptionPane.showMessageDialog(this, "Encounter deleted");

        populateEncounters();
        initialSetup();
    }//GEN-LAST:event_btnDeleteEncounterActionPerformed

    private void btnCreateEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEncounterActionPerformed
        // TODO add your handling code here:
        lblPatientName.setVisible(true);
        txtPatientName.setVisible(true);
        lblDoctorName.setVisible(true);
        txtDoctorName.setVisible(true);
        lblEnDate.setVisible(true);
        boxEnDate.setVisible(true);
        lblEnInfo.setVisible(true);
        txtEnInfo.setVisible(true);
        btnAddEncounter.setVisible(true);
    }//GEN-LAST:event_btnCreateEncounterActionPerformed

    private void btnAddEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEncounterActionPerformed
        // TODO add your handling code here:
        try{
            patientName = txtPatientName.getText();
            doctorName = txtDoctorName.getText();
            enDate = boxEnDate.getDate();
            enInfo = txtEnInfo.getText();
            
            if(encounterValidation()){
                Encounter e = eh.addNewEncounter();
                e.setPatientName(txtPatientName.getText());
                e.setDoctorName(txtDoctorName.getText());
                e.setDate(boxEnDate.getDate());
                e.setInfo(txtEnInfo.getText());
                initialSetup();
                JOptionPane.showMessageDialog(this, "Encounter added");
                populateEncounters();
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnAddEncounterActionPerformed

    private void btnUpdateEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a hospital to update their details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        Encounter e= (Encounter) model.getValueAt(selectedRowIndex, 0);
        try{
            patientName = txtPatientName.getText();
            doctorName = txtDoctorName.getText();
            enDate = boxEnDate.getDate();
            enInfo = txtEnInfo.getText();
            
            if(encounterValidation()){
                e.setPatientName(txtPatientName.getText());
                e.setDoctorName(txtDoctorName.getText());
                e.setDate(boxEnDate.getDate());
                e.setInfo(txtEnInfo.getText());
                initialSetup();
                JOptionPane.showMessageDialog(this, "Encounter updated");
                populateEncounters();
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnUpdateEncounterActionPerformed

    public void populatePatients(){
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
         model.setRowCount(0);
         for(Patient p : pd.getPatientDirectory()){
               Object row[] = new Object[1];
               row[0] = p;
               model.addRow(row); 
        }
    }

    public Boolean patientUpdateValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if (updatedName.isBlank() || !(updatedName.matches("^[ a-zA-Z]*$"))){
                message.add("Name cannot be blank, contain digits or special characters. Please enter a valid name and try again");
            }
            if(!(updatedEmailId.matches("^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$"))){
                message.add("Please enter a valid Email Address and try again");
            }
            if(updatedAge < 0 || updatedAge > 99){
            message.add("Please enter a valid Age (18-99) and try again");
            }
            if(updatedGender == "Please Select a Gender"){
            message.add("Please enter a valid Gender and try again");
            }
            if(!(String.valueOf(updatedPhNo).matches("[0-9]{10}$"))){
            message.add("Please enter a valid 10 digit Phone No and try again");
            }
            if(updatedPassword.length() <= 5){
            message.add("Please enter a valid password (must be more than 5 characters)");
            }
            if (updatedHeight < 30.48 || updatedHeight > 300){
                message.add("Please enter a valid height and try again");
            }
            if(updatedWeight < 7 || updatedWeight > 1500){
                message.add("Please enter a valid weight and try again");
            }
            if(updatedCity.isBlank() || !(updatedCity.matches("^[a-zA-Z1-9]*$"))){
                message.add("City cannot be blank or contain special characters. Please enter a valid city and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }    
    
    public Boolean doctorUpdateValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if (updatedName1.isBlank() || !(updatedName1.matches("^[ a-zA-Z]*$"))){
                message.add("Name cannot be blank, contain digits or special characters. Please enter a valid name and try again");
            }
            if(!(updatedEmailId1.matches("^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$"))){
                message.add("Please enter a valid Email Address and try again");
            }
            if(updatedAge1 < 0 || updatedAge1 > 99){
            message.add("Please enter a valid Age (18-99) and try again");
            }
            if(updatedGender1 == "Please Select a Gender"){
            message.add("Please enter a valid Gender and try again");
            }
            if(!(String.valueOf(updatedPhNo1).matches("[0-9]{10}$"))){
            message.add("Please enter a valid 10 digit Phone No and try again");
            }
            if(updatedPassword1.length() <= 5){
            message.add("Please enter a valid password (must be more than 5 characters)");
            }
            if(updatedSpeciality.isBlank() || !(updatedSpeciality.matches("^[ a-zA-Z]*$"))){
                message.add("Speciality cannot be blank, contain digits or special characters. Please enter a valid speciality and try again");
            }
            if(updatedYearsOfExp < 0 || updatedYearsOfExp > 30){
                message.add("Please enter a valid Years of Experience and try again");
            }
            if(updatedHospital.isBlank() || !(updatedHospital.matches("^[ a-zA-Z1-9]*$"))){
                message.add("Hospital name cannot be blank or special characters. Please enter a valid hospital name and try again");
            }
            if(updatedArea.isBlank() || !(updatedArea.matches("^[ a-zA-Z1-9]*$"))){
                message.add("Area cannot be blank or contain special characters. Please enter a valid area and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }    
    
    public Boolean hospitalValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if (hosName.isBlank() || !(hosName.matches("^[ a-zA-Z1-9]*$"))){
                message.add("Name cannot be blank or contain special characters. Please enter a valid name and try again");
            }
            if (hosCommunity.isBlank() || !(hosCommunity.matches("^[ a-zA-Z1-9]*$"))){
                message.add("Community cannot be blank or contain special characters. Please enter a valid community and try again");
            }
            if (hosCity.isBlank() || !(hosCity.matches("^[ a-zA-Z1-9]*$"))){
                message.add("City cannot be blank or contain special characters. Please enter a valid city and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }    
    
    public Boolean encounterValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if (dd.getDoctor(doctorName) == false){
                message.add("Doctor name does not match with present records. Please enter a valid name and try again");
            }
            if (!(pd.isAPatient(patientName))){
                message.add("Patient name does not match with present records. Please enter a valid name and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        } 
        
    public void populateDoctors(){
        DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
         model.setRowCount(0);
         for(Doctor d : dd.getDoctorDirectory()){
               Object row[] = new Object[1];
               row[0] = d;
               model.addRow(row); 
        }
    }
    
    public void populateHospitals(){
        DefaultTableModel model = (DefaultTableModel) tblHospitals.getModel();
         model.setRowCount(0);
         for(Hospital h : hd.getHospitalDirectory()){
               Object row[] = new Object[1];
               row[0] = h;
               model.addRow(row); 
        }
    }
    
    public void populateEncounters(){
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
         model.setRowCount(0);
         for(Encounter e : eh.getEncounterHistory()){
               Object row[] = new Object[1];
               row[0] = e;
               model.addRow(row); 
        }
    }
        
    public void initialSetup(){
        lblName.setVisible(false);
        txtName.setVisible(false);
        lblEmailId.setVisible(false);
        txtEmailId.setVisible(false);
        lblDob.setVisible(false);
        boxDob.setVisible(false);
        lblAge.setVisible(false);
        txtAge.setVisible(false);
        lblGender.setVisible(false);
        boxGender.setVisible(false);
        lblPhoneNo.setVisible(false);
        txtPhoneNo.setVisible(false);
        lblPassword.setVisible(false);
        txtPassword.setVisible(false);
        lblHeight.setVisible(false);
        txtHeight.setVisible(false);
        lblWeight.setVisible(false);     
        txtWeight.setVisible(false);
        lblCity.setVisible(false);
        txtCity.setVisible(false);
        btnUpdatePatient.setVisible(false);
        
        lblName1.setVisible(false);
        txtName1.setVisible(false);
        lblEmailId1.setVisible(false);
        txtEmailId1.setVisible(false);
        lblDob1.setVisible(false);
        boxDob1.setVisible(false);
        lblAge1.setVisible(false);
        txtAge1.setVisible(false);
        lblGender1.setVisible(false);
        boxGender1.setVisible(false);
        lblPhoneNo1.setVisible(false);
        txtPhoneNo1.setVisible(false);
        lblPassword1.setVisible(false);
        txtPassword1.setVisible(false);
        lblSpeciality.setVisible(false);
        txtSpeciality.setVisible(false);
        lblYearsOfExp.setVisible(false);     
        txtYearsOfExp.setVisible(false);
        lblHospital.setVisible(false);
        txtHospital.setVisible(false);
        lblArea.setVisible(false);
        txtArea.setVisible(false);
        btnUpdateDoctor.setVisible(false);

        lblHosName.setVisible(false);
        txtHosName.setVisible(false);
        lblHosCommunity.setVisible(false);
        txtHosCommunity.setVisible(false);
        lblHosCity.setVisible(false);
        txtHosCity.setVisible(false);
        btnAddHospital.setVisible(false);
        btnUpdateHospital.setVisible(false);
        
        lblPatientName.setVisible(false);
        txtPatientName.setVisible(false);
        lblDoctorName.setVisible(false);
        txtDoctorName.setVisible(false);
        lblEnDate.setVisible(false);
        boxEnDate.setVisible(false);
        lblEnInfo.setVisible(false);
        txtEnInfo.setVisible(false);
        btnAddEncounter.setVisible(false);
        btnUpdateEncounter.setVisible(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser boxDob;
    private com.toedter.calendar.JDateChooser boxDob1;
    private com.toedter.calendar.JDateChooser boxEnDate;
    private javax.swing.JComboBox<String> boxGender;
    private javax.swing.JComboBox<String> boxGender1;
    private javax.swing.JButton btnAddEncounter;
    private javax.swing.JButton btnAddHospital;
    private javax.swing.JButton btnCreateEncounter;
    private javax.swing.JButton btnCreateHospital;
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnDeleteDoctors;
    private javax.swing.JButton btnDeleteEncounter;
    private javax.swing.JButton btnDeleteHospital;
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JButton btnUpdateDoctor;
    private javax.swing.JButton btnUpdateEncounter;
    private javax.swing.JButton btnUpdateHospital;
    private javax.swing.JButton btnUpdatePatient;
    private javax.swing.JButton btnViewDoctors;
    private javax.swing.JButton btnViewEncounters;
    private javax.swing.JButton btnViewHospitals;
    private javax.swing.JButton btnViewPatients;
    private javax.swing.JButton btnViewUpdateDoctors;
    private javax.swing.JButton btnViewUpdateEncounter;
    private javax.swing.JButton btnViewUpdateHospitals;
    private javax.swing.JButton btnViewUpdatePatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblDob1;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblEmailId1;
    private javax.swing.JLabel lblEnDate;
    private javax.swing.JLabel lblEnInfo;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHosCity;
    private javax.swing.JLabel lblHosCommunity;
    private javax.swing.JLabel lblHosName;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword1;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPhoneNo1;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblYearsOfExp;
    private javax.swing.JTable tblDoctors;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTable tblHospitals;
    private javax.swing.JTable tblPatients;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAge1;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtEmailId1;
    private javax.swing.JTextField txtEnInfo;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtHosCity;
    private javax.swing.JTextField txtHosCommunity;
    private javax.swing.JTextField txtHosName;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPassword1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPhoneNo1;
    private javax.swing.JTextField txtSpeciality;
    private javax.swing.JTextField txtWeight;
    private javax.swing.JTextField txtYearsOfExp;
    // End of variables declaration//GEN-END:variables
}
