/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.VitalSigns;
import model.VitalSignsHistory;

/**
 *
 * @author mohit
 */
public class DoctorViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorViewJPanel
     */
    Doctor d;
    EncounterHistory eh;
    VitalSignsHistory vsh;
    Date date;
    double temp;
    double bloodPressure;
    int pulse;
    String comment;
            
    public DoctorViewJPanel(Doctor d, EncounterHistory eh, VitalSignsHistory vsh) {
        initComponents();
        this.d = d;
        this.eh = eh;
        this.vsh = vsh;
        
        populateNames();
        initialSetup();
        
        lblHeading.setText("Welcome " + d.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        btnViewEncounters = new javax.swing.JButton();
        lblViewVitalSigns = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        btnViewVitalSigns = new javax.swing.JButton();
        lblTemperature = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        lblPulse = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtPulse = new javax.swing.JTextField();
        btnUpdateVitalSigns = new javax.swing.JButton();
        lblComment = new javax.swing.JLabel();
        txtComment = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        boxDate = new com.toedter.calendar.JDateChooser();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        lblInfo1 = new javax.swing.JLabel();
        txtInfo1 = new javax.swing.JTextField();
        btnConfirmBooking = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeading.setFont(new java.awt.Font("SignPainter", 0, 36)); // NOI18N
        lblHeading.setText("Welcome");
        add(lblHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 6, -1, -1));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 68, 270, 218));

        btnViewEncounters.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewEncounters.setText("View Encounters");
        btnViewEncounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncountersActionPerformed(evt);
            }
        });
        add(btnViewEncounters, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 298, -1, -1));

        lblViewVitalSigns.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblViewVitalSigns.setText("View Vital Signs");
        add(lblViewVitalSigns, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 345, -1, -1));

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Encounters", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEncounters);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 68, 660, 218));

        btnViewVitalSigns.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewVitalSigns.setText("Add/View Vital Signs");
        btnViewVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewVitalSignsActionPerformed(evt);
            }
        });
        add(btnViewVitalSigns, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, -1, -1));

        lblTemperature.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblTemperature.setText("Temperature:");
        add(lblTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));

        lblBloodPressure.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblBloodPressure.setText("Blood Pressure:");
        add(lblBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        lblPulse.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPulse.setText("Pulse:");
        add(lblPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 465, -1, -1));

        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });
        add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 380, 125, -1));
        add(txtBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 421, 125, -1));
        add(txtPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 462, 125, -1));

        btnUpdateVitalSigns.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnUpdateVitalSigns.setText("Update Vital Signs");
        btnUpdateVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateVitalSignsActionPerformed(evt);
            }
        });
        add(btnUpdateVitalSigns, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 558, -1, -1));

        lblComment.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblComment.setText("Comment:");
        add(lblComment, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, -1, -1));
        add(txtComment, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 506, 125, -1));

        jButton1.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        jButton1.setText("Add Encounter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, -1, -1));
        add(boxDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 460, 205, -1));

        lblPatientName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPatientName.setText("Name:");
        add(lblPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, -1, -1));

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, 205, -1));

        lblDoctorName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDoctorName.setText("Doctor Name:");
        add(lblDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, -1, -1));
        add(txtDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 205, -1));

        lblDate.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDate.setText("Date:");
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 460, -1, -1));

        lblInfo1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblInfo1.setText("Info:");
        add(lblInfo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, -1, -1));
        add(txtInfo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 205, -1));

        btnConfirmBooking.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnConfirmBooking.setText("Confirm Encounter");
        btnConfirmBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmBookingActionPerformed(evt);
            }
        });
        add(btnConfirmBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 550, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/mohit/Desktop/INFO5100 (14259) Application Engineering and Development /Rayalacheruvu_Maruti_002109594/Assignment2_HospitalCRUD/images/home.png")); // NOI18N
        jLabel1.setText("");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewEncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncountersActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblData.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a person to view their encounters");
            return;
        }
        btnViewVitalSigns.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        String selectedPerson = (String) model.getValueAt(selectedRowIndex, 0);
        populateEncounters(selectedPerson);

        //        txtName.setText(selectedEmpProfile.getName());
        //        txtEmpId.setText(String.valueOf(selectedEmpProfile.getEmpId()));
        //        txtAge.setText(String.valueOf(selectedEmpProfile.getAge()));
        //        txtGender.setText(selectedEmpProfile.getGender());
        //        jDateChooser1.setDate(selectedEmpProfile.getStartDate());
        //        txtLevel.setText(String.valueOf(selectedEmpProfile.getLevel()));
        //        txtTeamInfo.setText(selectedEmpProfile.getTeamInfo());
        //        txtPhoneNo.setText(String.valueOf(selectedEmpProfile.getPhoneNo()));
        //        txtPositionTitle.setText(selectedEmpProfile.getPositionTitle());
        //        txtEmailAddress.setText(selectedEmpProfile.getEmailAddress());
        //        ImageIcon icon = new ImageIcon(selectedEmpProfile.getPhoto());
        //        Image image = icon.getImage().getScaledInstance(lblPhotoShow.getHeight(), lblPhotoShow.getWidth(), Image.SCALE_SMOOTH);
        //        lblPhotoShow.setIcon(new ImageIcon(image));
    }//GEN-LAST:event_btnViewEncountersActionPerformed

    private void btnViewVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewVitalSignsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();
        int selectedRowIndex1 = tblData.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select an encounter to view vital signs");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        Date selectedEncounter = (Date) model.getValueAt(selectedRowIndex, 0);

        DefaultTableModel model1 = (DefaultTableModel) tblData.getModel();
        String selectedPerson = (String) model1.getValueAt(selectedRowIndex1, 0);
        
        lblViewVitalSigns.setVisible(true);
        lblTemperature.setVisible(true);
        lblBloodPressure.setVisible(true);
        lblPulse.setVisible(true);
        lblComment.setVisible(true);
        txtTemperature.setVisible(true);
        txtBloodPressure.setVisible(true);
        txtPulse.setVisible(true);
        txtComment.setVisible(true);
        btnUpdateVitalSigns.setVisible(true);
        
        VitalSigns vs = vsh.getVitalSigns(selectedEncounter, selectedPerson);
        if(vs != null){
            txtTemperature.setText(String.valueOf(vs.getTemp()));
            txtBloodPressure.setText(String.valueOf(vs.getBloodPressure()));
            txtPulse.setText(String.valueOf(vs.getPulse()));
            txtComment.setText(vs.getInfo());
        }
        else{
            txtTemperature.setText("");
            txtBloodPressure.setText("");
            txtPulse.setText("");
            txtComment.setText("");
        }
    }//GEN-LAST:event_btnViewVitalSignsActionPerformed

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed

    private void btnUpdateVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateVitalSignsActionPerformed
        // TODO add your handling code here:
        try{
            temp = Double.parseDouble(txtTemperature.getText());
            bloodPressure = Double.parseDouble(txtBloodPressure.getText());
            pulse = Integer.parseInt(txtPulse.getText());
            comment = txtComment.getText();
            
            int selectedRowIndex = tblEncounters.getSelectedRow();
            int selectedRowIndex1 = tblData.getSelectedRow();

            if(selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select an encounter to add vital signs");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            Date selectedEncounterDate = (Date) model.getValueAt(selectedRowIndex, 0);
            
            DefaultTableModel model1 = (DefaultTableModel) tblData.getModel();
            String selectedPerson = (String) model1.getValueAt(selectedRowIndex1, 0);

            VitalSigns vs = vsh.addNewVitalSigns();
            vs.setPatientName(selectedPerson);
            vs.setDoctorName(d.getName());
            vs.setDate(selectedEncounterDate);
            vs.setTemp(temp);
            vs.setBloodPressure(bloodPressure);
            vs.setPulse(pulse);
            vs.setInfo(comment);
            JOptionPane.showMessageDialog(this, "Vital signs added successfully");
              
//              txtTemperature.setText("");
//              txtBloodPressure.setText("");
//              txtPulse.setText("");
              
              initialSetup();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please enter valid vital signs values and try again");
        }
    }//GEN-LAST:event_btnUpdateVitalSignsActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void btnConfirmBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmBookingActionPerformed
        // TODO add your handling code here:
        if(txtInfo1.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Info cannot be blank");
        }
        else{
            Encounter e = eh.addNewEncounter();
            e.setPatientName(txtPatientName.getText());
            e.setDoctorName(txtDoctorName.getText());
            Date date = boxDate.getDate();
            e.setDate(date);
            e.setInfo(txtInfo1.getText());
            JOptionPane.showMessageDialog(this, "New Encounter Booked Successfully");

            initialSetup();
            populateEncounters(txtPatientName.getText());

        }
    }//GEN-LAST:event_btnConfirmBookingActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblData.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a patient to add encounter");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        String selectedPatient = (String) model.getValueAt(selectedRowIndex, 0);
        
        lblPatientName.setVisible(true);
        txtPatientName.setVisible(true);
        lblDoctorName.setVisible(true);
        txtDoctorName.setVisible(true);
        lblDate.setVisible(true);
        boxDate.setVisible(true);
        lblInfo1.setVisible(true);
        txtInfo1.setVisible(true);
        btnConfirmBooking.setVisible(true);
        
        txtPatientName.setText(selectedPatient);
        txtDoctorName.setText(d.getName());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void populateNames(){
        var res = eh.getEncounter(d.getName());
        var names = new ArrayList<String>();
        for(Encounter e : res){
            if(!(names.contains(e.getPatientName())))
                names.add(e.getPatientName());
        }
        if(res != null){
            DefaultTableModel model = (DefaultTableModel) tblData.getModel();
            model.setRowCount(0);
            for(String n : names){
                  Object row[] = new Object[1];
                  row[0] = n;
                  model.addRow(row);
            }
        }
    }
    
    public void populateEncounters(String patientName){
        var res = eh.getEncounter(d.getName());
        if(res != null){
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            model.setRowCount(0);
            for(Encounter e : res){
                  Object row[] = new Object[2];
                  row[0] = e.getDate(); //.toString().substring(0, 10);
                  row[1] = e.getInfo();
                  model.addRow(row); 
            }
        }
    }

    public void initialSetup(){
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        model.setRowCount(0);
        
        lblViewVitalSigns.setVisible(false);
        lblTemperature.setVisible(false);
        lblBloodPressure.setVisible(false);
        lblPulse.setVisible(false);
        lblComment.setVisible(false);
        txtTemperature.setVisible(false);
        txtBloodPressure.setVisible(false);
        txtPulse.setVisible(false);
        txtComment.setVisible(false);
        btnViewVitalSigns.setVisible(false);
        btnUpdateVitalSigns.setVisible(false);
        lblPatientName.setVisible(false);
        txtPatientName.setVisible(false);
        lblDoctorName.setVisible(false);
        txtDoctorName.setVisible(false);
        lblDate.setVisible(false);
        boxDate.setVisible(false);
        lblInfo1.setVisible(false);
        txtInfo1.setVisible(false);
        btnConfirmBooking.setVisible(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser boxDate;
    private javax.swing.JButton btnConfirmBooking;
    private javax.swing.JButton btnUpdateVitalSigns;
    private javax.swing.JButton btnViewEncounters;
    private javax.swing.JButton btnViewVitalSigns;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblInfo1;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblViewVitalSigns;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtComment;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtInfo1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
