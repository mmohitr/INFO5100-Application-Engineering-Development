/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.VitalSigns;
import model.VitalSignsHistory;

/**
 *
 * @author mohit
 */
public class PatientViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    DoctorDirectory dd;
    PatientDirectory pd;
    Patient p;
    EncounterHistory eh;
    String name;
    VitalSignsHistory vsh;
    
    String updatedName;
    String updatedPhNo;
    String updatedGender;
    int updatedAge;
    Date updatedDob;
    String updatedRole;
    String updatedCity;
    int updatedHeight;
    int updatedWeight;
    String updatedEmailId;
    String updatedPassword;
    
    public PatientViewJPanel(DoctorDirectory dd, PatientDirectory pd, Patient p, EncounterHistory eh, VitalSignsHistory vsh) {
        initComponents();
        this.dd = dd;
        this.pd = pd;
        this.p = p;
        this.eh = eh;
        this.vsh = vsh;
        
        populateTable();
        initialSetup();
        
        lblWelcome.setText("Welcome " + p.getName());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnView1 = new javax.swing.JButton();
        btnViewPersonalDetails = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        boxDob = new com.toedter.calendar.JDateChooser();
        txtAge = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblEmailId = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtEmailId = new javax.swing.JTextField();
        boxGender = new javax.swing.JComboBox<>();
        lblName = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblPhoneNo = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblAvailableDoctors = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnBookEncounter = new javax.swing.JButton();
        lblPatientName = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        btnConfirmBooking = new javax.swing.JButton();
        lblBooking = new javax.swing.JLabel();
        boxDate = new com.toedter.calendar.JDateChooser();
        btnViewVitalSigns = new javax.swing.JButton();
        lblTemperature = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        lblPulse = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtPulse = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        btnShowEncounters = new javax.swing.JButton();
        lblInfo = new javax.swing.JLabel();
        txtInfo = new javax.swing.JTextField();
        lblComment = new javax.swing.JLabel();
        txtComment = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Speciality", "Hospital Name", "Hospital Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblData);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 94, 1000, 150));

        btnView.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 250, -1, -1));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 250, 200, -1));

        btnView1.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnView1.setText("View All");
        btnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView1ActionPerformed(evt);
            }
        });
        add(btnView1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 250, 100, -1));

        btnViewPersonalDetails.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewPersonalDetails.setText("View Personal Details");
        btnViewPersonalDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonalDetailsActionPerformed(evt);
            }
        });
        add(btnViewPersonalDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 312, 305, -1));
        add(boxDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 394, 305, -1));

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 435, 305, -1));
        add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 530, 305, -1));

        lblPassword.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPassword.setText("Password:");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 580, -1, -1));

        lblEmailId.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblEmailId.setText("Email ID:");
        add(lblEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, -1, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 574, 305, -1));
        add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 353, 305, -1));

        boxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select a Gender", "Male", "Female", "Other" }));
        add(boxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 476, 305, -1));

        lblName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblName.setText("Name:");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, -1, -1));

        lblDob.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDob.setText("Date of Birth:");
        add(lblDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        lblAge.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, -1, -1));

        lblGender.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, -1, -1));

        lblPhoneNo.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPhoneNo.setText("Cell Phone No:");
        add(lblPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 530, -1, -1));

        lblCity.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblCity.setText("City:");
        add(lblCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 700, -1, -1));
        add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 615, 305, -1));
        add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 656, 305, -1));
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 697, 305, -1));

        lblHeight.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHeight.setText("Height:");
        add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 620, -1, -1));

        lblWeight.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblWeight.setText("Weight:");
        add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 660, -1, -1));

        lblAvailableDoctors.setFont(new java.awt.Font("Krungthep", 0, 18)); // NOI18N
        lblAvailableDoctors.setText("Available Doctors");
        add(lblAvailableDoctors, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 53, -1, -1));

        lblWelcome.setFont(new java.awt.Font("SignPainter", 0, 36)); // NOI18N
        lblWelcome.setText("Welcome");
        add(lblWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 6, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnUpdate.setText("Update Personal Details");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, -1, -1));

        btnBookEncounter.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnBookEncounter.setText("Book Encounter");
        btnBookEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookEncounterActionPerformed(evt);
            }
        });
        add(btnBookEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, -1, -1));

        lblPatientName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPatientName.setText("Name:");
        add(lblPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 560, -1, -1));

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 560, 213, -1));

        lblDoctorName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDoctorName.setText("Doctor Name:");
        add(lblDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 610, -1, -1));
        add(txtDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 610, 213, -1));

        lblDate.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDate.setText("Date:");
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 650, -1, -1));

        btnConfirmBooking.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnConfirmBooking.setText("Confirm Booking");
        btnConfirmBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmBookingActionPerformed(evt);
            }
        });
        add(btnConfirmBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 730, -1, -1));
        add(lblBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 345, 20));
        add(boxDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 650, 213, -1));

        btnViewVitalSigns.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnViewVitalSigns.setText("View Vital Signs");
        btnViewVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewVitalSignsActionPerformed(evt);
            }
        });
        add(btnViewVitalSigns, new org.netbeans.lib.awtextra.AbsoluteConstraints(575, 303, -1, -1));

        lblTemperature.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblTemperature.setText("Temperature:");
        add(lblTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 360, -1, -1));

        lblBloodPressure.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblBloodPressure.setText("Blood Pressure:");
        add(lblBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, -1, -1));

        lblPulse.setBackground(new java.awt.Color(255, 255, 255));
        lblPulse.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPulse.setText("Pulse:");
        add(lblPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 420, -1, -1));

        txtTemperature.setEditable(false);
        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });
        add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 359, 125, -1));

        txtBloodPressure.setEditable(false);
        add(txtBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 388, 125, -1));

        txtPulse.setEditable(false);
        add(txtPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 417, 125, -1));

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Encounters"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEncounters);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 330, 250, 167));

        btnShowEncounters.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnShowEncounters.setText("Show Encounters");
        btnShowEncounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEncountersActionPerformed(evt);
            }
        });
        add(btnShowEncounters, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 300, -1, -1));

        lblInfo.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblInfo.setText("Info:");
        add(lblInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 690, -1, -1));
        add(txtInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 690, 213, -1));

        lblComment.setBackground(new java.awt.Color(255, 255, 255));
        lblComment.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblComment.setText("Comment:");
        add(lblComment, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 450, -1, -1));

        txtComment.setEditable(false);
        add(txtComment, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 446, 125, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/mohit/Desktop/INFO5100 (14259) Application Engineering and Development /Rayalacheruvu_Maruti_002109594/Assignment2_HospitalCRUD/images/patient.png")); // NOI18N
        jLabel1.setText("");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        var searchTerm = txtSearch.getText();
        var res = dd.getSearchResults(searchTerm);
        populateSearchTable(res);
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView1ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnView1ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void btnViewPersonalDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonalDetailsActionPerformed
        // TODO add your handling code here:
        initialSetup();
        lblName.setVisible(true);
        txtName.setVisible(true);
        lblEmailId.setVisible(true);
        txtEmailId.setVisible(true);
        lblDob.setVisible(true);
        boxDob.setVisible(true);
        lblAge.setVisible(true);
        txtAge.setVisible(true);
        lblGender.setVisible(true);
        boxGender.setVisible(true);
        lblPhoneNo.setVisible(true);
        txtPhoneNo.setVisible(true);
        lblPassword.setVisible(true);
        txtPassword.setVisible(true);
        lblHeight.setVisible(true);
        txtHeight.setVisible(true);
        lblWeight.setVisible(true);     
        txtWeight.setVisible(true);
        lblCity.setVisible(true);
        txtCity.setVisible(true);
        btnUpdate.setVisible(true);
        
        name = p.getName();
        txtName.setText(name);
        txtEmailId.setText(p.getEmailId());
        boxDob.setDate(p.getDob());
        txtAge.setText(String.valueOf(p.getAge()));
        boxGender.setSelectedItem(p.getGender());
        txtPhoneNo.setText(p.getPhNo());
        txtPassword.setText(p.getPassword());
        txtHeight.setText(String.valueOf(p.getHeight()));
        txtWeight.setText(String.valueOf(p.getWeight()));
        txtCity.setText(p.getCity());
    }//GEN-LAST:event_btnViewPersonalDetailsActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try{
            updatedName = txtName.getText();
            updatedEmailId = txtEmailId.getText();
            updatedDob = boxDob.getDate();
            updatedAge = Integer.parseInt(txtAge.getText());
            updatedGender = boxGender.getSelectedItem().toString();
            updatedPhNo = txtPhoneNo.getText();
            updatedPassword = String.valueOf(txtPassword.getPassword());
            updatedHeight = Integer.parseInt(txtHeight.getText());
            updatedWeight = Integer.parseInt(txtWeight.getText());
            updatedCity = txtCity.getText();
            if(updateValidation()){
                p.setName(txtName.getText());
                p.setEmailId(txtEmailId.getText());
                p.setDob(boxDob.getDate());
                p.setAge(Integer.parseInt(txtAge.getText()));
                p.setGender(boxGender.getSelectedItem().toString());
                p.setPhNo(txtPhoneNo.getText());
                p.setPassword(String.valueOf(txtPassword.getPassword()));
                p.setHeight(Integer.parseInt(txtHeight.getText()));
                p.setWeight(Integer.parseInt(txtWeight.getText()));
                p.setCity(txtCity.getText());
                JOptionPane.showMessageDialog(this, "Details Updated");
                initialSetup();
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void btnConfirmBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmBookingActionPerformed
        // TODO add your handling code here:
        
        if(txtInfo.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Info cannot be blank");
        }
        else{
        Encounter e = eh.addNewEncounter();
        e.setPatientName(txtPatientName.getText());
        e.setDoctorName(txtDoctorName.getText());
        Date date = boxDate.getDate();
        e.setDate(date);
        e.setInfo(txtInfo.getText());
        JOptionPane.showMessageDialog(this, "New Encounter Booked Successfully");
        
        initialSetup();
        
        lblBooking.setText("Booking scheduled for " +  p.getName() + " on " + date.toString().substring(0, 10));
        }
    }//GEN-LAST:event_btnConfirmBookingActionPerformed

    private void btnBookEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblData.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a doctor to book encounter");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);
        
        lblPatientName.setVisible(true);
        txtPatientName.setVisible(true);
        lblDoctorName.setVisible(true);
        txtDoctorName.setVisible(true);
        lblDate.setVisible(true);
        boxDate.setVisible(true);
        lblInfo.setVisible(true);
        txtInfo.setVisible(true);
        btnConfirmBooking.setVisible(true);
        
        txtPatientName.setText(p.getName());
        txtDoctorName.setText(selectedDoctor.getName());
    }//GEN-LAST:event_btnBookEncounterActionPerformed

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed

    private void btnViewVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewVitalSignsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select an encounter to view vital signs");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        Date selectedDate = (Date) model.getValueAt(selectedRowIndex, 0);
        
        try{
            VitalSigns vs = vsh.getVitalSigns(selectedDate);
            if(vs != null){
                lblTemperature.setVisible(true);
                lblBloodPressure.setVisible(true);
                lblPulse.setVisible(true);
                lblComment.setVisible(true);
                txtTemperature.setVisible(true);
                txtBloodPressure.setVisible(true);
                txtPulse.setVisible(true);
                txtComment.setVisible(true);
                txtTemperature.setText(String.valueOf(vs.getTemp()));
                txtBloodPressure.setText(String.valueOf(vs.getBloodPressure()));
                txtPulse.setText(String.valueOf(vs.getPulse()));
                txtComment.setText(vs.getInfo());
            }
            else{
                JOptionPane.showMessageDialog(this, "Vital signs not yet updated");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Vital signs not yet updated");
        }
    }//GEN-LAST:event_btnViewVitalSignsActionPerformed

    private void btnShowEncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEncountersActionPerformed
        // TODO add your handling code here:
        populateEncounters();
        btnViewVitalSigns.setVisible(true);

    }//GEN-LAST:event_btnShowEncountersActionPerformed

    private void populateTable() {
         DefaultTableModel model = (DefaultTableModel) tblData.getModel();
         model.setRowCount(0);
         for(Doctor d : dd.getDoctorDirectory()){
               Object row[] = new Object[4];
               row[0] = d;
               row[1] = d.getSpeciality();
               row[2] = d.getHospital();
               row[3] = d.getArea();
               model.addRow(row); 
        }
    }
    
    private void populateSearchTable(ArrayList<Doctor> list) {
         DefaultTableModel model = (DefaultTableModel) tblData.getModel();
         model.setRowCount(0);
         for(Doctor d : list){
               Object row[] = new Object[4];
               row[0] = d;
               row[1] = d.getSpeciality();
               row[2] = d.getHospital();
               row[3] = d.getArea();
               model.addRow(row); 
        }
    }

    
    public void initialSetup(){
        lblName.setVisible(false);
        txtName.setVisible(false);
        lblEmailId.setVisible(false);
        txtEmailId.setVisible(false);
        lblDob.setVisible(false);
        boxDob.setVisible(false);
        lblAge.setVisible(false);
        txtAge.setVisible(false);
        lblGender.setVisible(false);
        boxGender.setVisible(false);
        lblPhoneNo.setVisible(false);
        txtPhoneNo.setVisible(false);
        lblPassword.setVisible(false);
        txtPassword.setVisible(false);
        lblHeight.setVisible(false);
        txtHeight.setVisible(false);
        lblWeight.setVisible(false);     
        txtWeight.setVisible(false);
        lblCity.setVisible(false);
        txtCity.setVisible(false);
        lblPatientName.setVisible(false);
        txtPatientName.setVisible(false);
        lblDoctorName.setVisible(false);
        txtDoctorName.setVisible(false);
        lblDate.setVisible(false);
        boxDate.setVisible(false);
        lblInfo.setVisible(false);
        txtInfo.setVisible(false);
        btnConfirmBooking.setVisible(false);
        btnUpdate.setVisible(false);
        lblTemperature.setVisible(false);
        lblBloodPressure.setVisible(false);
        lblPulse.setVisible(false);
        txtTemperature.setVisible(false);
        txtBloodPressure.setVisible(false);
        txtPulse.setVisible(false);
        lblComment.setVisible(false);
        txtComment.setVisible(false);
        btnViewVitalSigns.setVisible(false);
    }
    
    public Boolean updateValidation(){
    ArrayList message = null;
            message = new ArrayList(0);
            if (updatedName.isBlank() || !(updatedName.matches("^[ a-zA-Z]*$"))){
                message.add("Name cannot be blank, contain digits or special characters. Please enter a valid name and try again");
            }
            if(!(updatedEmailId.matches("^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$"))){
                message.add("Please enter a valid Email Address and try again");
            }
            if(updatedAge < 0 || updatedAge > 99){
            message.add("Please enter a valid Age (18-99) and try again");
            }
            if(updatedGender == "Please Select a Gender"){
            message.add("Please enter a valid Gender and try again");
            }
            if(!(String.valueOf(updatedPhNo).matches("[0-9]{10}$"))){
            message.add("Please enter a valid 10 digit Phone No and try again");
            }
            if(updatedPassword.length() <= 5){
            message.add("Please enter a valid password (must be more than 5 characters)");
            }
            if(updatedRole == "Please Select a Role"){
                message.add("Please select a Role and fill in the required fields");
            }
            if (updatedHeight < 30.48 || updatedHeight > 300){
                message.add("Please enter a valid height and try again");
            }
            if(updatedWeight < 7 || updatedWeight > 1500){
                message.add("Please enter a valid weight and try again");
            }
            if(updatedCity.isBlank() || !(updatedCity.matches("^[a-zA-Z]*$"))){
                message.add("City cannot be blank, contain digits or special characters. Please enter a valid city and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }    
    
    public void populateEncounters(){
        int selectedRowIndex = tblData.getSelectedRow();

        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a doctor to view encounters");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);
        
        var res = eh.getEncounter(selectedDoctor.getName(), p.getName());
        if(res != null){
            DefaultTableModel model1 = (DefaultTableModel) tblEncounters.getModel();
            model1.setRowCount(0);
            for(Encounter e : res){
                  Object row[] = new Object[1];
                  row[0] = e.getDate(); //.toString().substring(0, 10);
                  model1.addRow(row); 
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser boxDate;
    private com.toedter.calendar.JDateChooser boxDob;
    private javax.swing.JComboBox<String> boxGender;
    private javax.swing.JButton btnBookEncounter;
    private javax.swing.JButton btnConfirmBooking;
    private javax.swing.JButton btnShowEncounters;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnView1;
    private javax.swing.JButton btnViewPersonalDetails;
    private javax.swing.JButton btnViewVitalSigns;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAvailableDoctors;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblBooking;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtComment;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtInfo;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
