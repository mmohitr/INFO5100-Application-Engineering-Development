/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import model.Doctor;
import model.DoctorDirectory;
import model.EncounterHistory;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;
import model.VitalSignsHistory;

/**
 *
 * @author mohit
 */
public class SignupJPanel extends javax.swing.JPanel {
    
    /**
     * Creates new form SignupJPanel
     */
    String name;
    String phNo;
    String gender;
    int age;
    Date dob;
    String role;
    String city;
    int height;
    int weight;
    String emailId;
    String password;
    String speciality;
    int yearsOfExp;
    String hospital;
    String area;
    
    PatientDirectory pd;
    DoctorDirectory dd;
    
    public SignupJPanel(PatientDirectory pd, DoctorDirectory dd) {
        initComponents();
        this.pd = pd;
        this.dd = dd;
        jComboBox1.setSelectedItem("Please Select a Role");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEnterDetails = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblPhoneNo = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        txtAge = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        txtHeight = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblEmailId = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        lblArea = new javax.swing.JLabel();
        txtSpeciality = new javax.swing.JTextField();
        txtYearsOfExp = new javax.swing.JTextField();
        lblSpeciality = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        lblYearsOfExp = new javax.swing.JLabel();
        txtHospital = new javax.swing.JTextField();
        lblHospital = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEnterDetails.setFont(new java.awt.Font("Phosphate", 0, 36)); // NOI18N
        lblEnterDetails.setForeground(new java.awt.Color(255, 255, 255));
        lblEnterDetails.setText("Enter Details to Create a New User");
        add(lblEnterDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, -1));

        lblName.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblName.setText("Name:");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 152, -1, -1));

        lblDob.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblDob.setText("Date of Birth:");
        add(lblDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 237, -1, -1));

        lblAge.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 275, -1, -1));

        lblGender.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 316, -1, -1));

        lblPhoneNo.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPhoneNo.setText("Cell Phone No:");
        add(lblPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 357, -1, -1));

        lblRole.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblRole.setText("Role:");
        add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 436, -1, -1));

        lblHeight.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblHeight.setText("Height:");
        add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 493, -1, -1));

        lblWeight.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblWeight.setText("Weight:");
        add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 537, -1, -1));

        lblCity.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblCity.setText("City:");
        add(lblCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 578, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 149, 305, -1));
        add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 231, 305, -1));

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 272, 305, -1));
        add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 354, 305, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select a Role", "Patient", "Doctor" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 436, 305, -1));
        add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 493, 305, -1));
        add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 534, 305, -1));
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 575, 305, -1));

        btnCreate.setFont(new java.awt.Font("Menlo", 0, 13)); // NOI18N
        btnCreate.setText("Create New User");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 718, 150, -1));

        lblPassword.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblPassword.setText("Password:");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 398, -1, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 395, 305, -1));

        lblEmailId.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        lblEmailId.setText("Email ID:");
        add(lblEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 193, -1, -1));
        add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 190, 305, -1));

        lblArea.setText("Area:");
        add(lblArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(579, 619, -1, -1));
        add(txtSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 493, 305, -1));
        add(txtYearsOfExp, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 534, 305, -1));

        lblSpeciality.setText("Speciality:");
        add(lblSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 493, -1, -1));
        add(txtArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 616, 305, -1));

        lblYearsOfExp.setText("Years of Experience:");
        add(lblYearsOfExp, new org.netbeans.lib.awtextra.AbsoluteConstraints(488, 534, -1, -1));
        add(txtHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(683, 575, 305, -1));

        lblHospital.setText("Hostpital:");
        add(lblHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(553, 578, -1, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select a Gender", "Male", "Female", "Other" }));
        add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 313, 305, -1));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 710, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/mohit/Desktop/INFO5100 (14259) Application Engineering and Development /Rayalacheruvu_Maruti_002109594/Assignment2_HospitalCRUD/images/signup.png")); // NOI18N
        jLabel1.setText("");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem() != null){
            lblHeight.setVisible(false);
            txtHeight.setVisible(false);
            lblWeight.setVisible(false);
            txtWeight.setVisible(false);
            lblCity.setVisible(false);
            txtCity.setVisible(false);
            lblSpeciality.setVisible(false);
            txtSpeciality.setVisible(false);
            lblYearsOfExp.setVisible(false);
            txtYearsOfExp.setVisible(false);
            lblHospital.setVisible(false);
            txtHospital.setVisible(false);
            lblArea.setVisible(false);
            txtArea.setVisible(false);
            String selectedItem = jComboBox1.getSelectedItem().toString();
            if("Patient".equals(selectedItem)){
                lblHeight.setVisible(true);
                txtHeight.setVisible(true);
                lblWeight.setVisible(true);
                txtWeight.setVisible(true);
                lblCity.setVisible(true);
                txtCity.setVisible(true);
            }
            else if("Doctor".equals(selectedItem)){
                lblSpeciality.setVisible(true);
                txtSpeciality.setVisible(true);
                lblYearsOfExp.setVisible(true);
                txtYearsOfExp.setVisible(true);
                lblHospital.setVisible(true);
                txtHospital.setVisible(true);
                lblArea.setVisible(true);
                txtArea.setVisible(true);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        try{
            name = txtName.getText();
            emailId = txtEmailId.getText();
            age = Integer.parseInt(txtAge.getText());
            gender = jComboBox2.getSelectedItem().toString();
            dob = jDateChooser1.getDate();
            phNo = txtPhoneNo.getText();
            role = jComboBox1.getSelectedItem().toString();
            password = String.valueOf(txtPassword.getPassword());
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Please enter all values and try again");
        }
        
        if("Patient".equals(role)){
            try{
                height = Integer.parseInt(txtHeight.getText());
                weight = Integer.parseInt(txtWeight.getText());
                city = txtCity.getText();
                if(generalValidation()){
                    if(patientValidation()){
                        Patient newPatient = pd.addNewPatient();
                        newPatient.setName(name);
                        newPatient.setEmailId(emailId);
                        newPatient.setAge(age);
                        newPatient.setGender(gender);
                        newPatient.setDob(dob);
                        newPatient.setPhNo(phNo);
                        newPatient.setHeight(height);
                        newPatient.setWeight(weight);
                        newPatient.setCity(city);
                        newPatient.setPassword(password);

                        JOptionPane.showMessageDialog(this, "New Patient successfully added. Continue to login.");

                        txtName.setText("");
                        txtEmailId.setText("");
                        txtAge.setText("");
                        jComboBox2.setSelectedItem("Please Select a Gender");
                        jDateChooser1.setDate(null);
                        txtPhoneNo.setText("");
                        jComboBox1.setSelectedItem("Please Select a Role");
                        txtHeight.setText("");
                        txtWeight.setText("");
                        txtCity.setText("");
                        txtPassword.setText("");
                    }
                }
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(this, "Please enter all required values for patient and try again");
            }
        }
        
        if("Doctor".equals(role)){
            try{
                speciality = txtSpeciality.getText();
                yearsOfExp = Integer.parseInt(txtYearsOfExp.getText());
                hospital = txtHospital.getText();
                area = txtArea.getText();
                if(generalValidation()){
                   if(doctorValidation()){
                        Doctor newDoctor = dd.addNewDoctor();
                        newDoctor.setName(name);
                        newDoctor.setEmailId(emailId);
                        newDoctor.setAge(age);
                        newDoctor.setGender(gender);
                        newDoctor.setDob(dob);
                        newDoctor.setPhNo(phNo);
                        newDoctor.setPassword(password);
                        newDoctor.setSpeciality(speciality);
                        newDoctor.setYearsOfExp(yearsOfExp);
                        newDoctor.setHospital(hospital);
                        newDoctor.setArea(area);

                        JOptionPane.showMessageDialog(this, "New Doctor successfully added. Continue to login.");

                        txtName.setText("");
                        txtEmailId.setText("");
                        txtAge.setText("");
                        jComboBox2.setSelectedItem("Please Select a Gender");
                        jDateChooser1.setDate(null);
                        txtPhoneNo.setText("");
                        jComboBox1.setSelectedItem("Please Select a Role");
                        txtPassword.setText("");
                        txtSpeciality.setText("");
                        txtYearsOfExp.setText("");
                        txtHospital.setText("");
                        txtArea.setText("");
                    } 
                }
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(this, "Please enter all required values for doctor and try again");
            }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        SystemAdminJPanel systemAdminPanel = new SystemAdminJPanel(pd, dd, eh,  sp);
//        sp.setRightComponent();
    }//GEN-LAST:event_jButton1ActionPerformed
        private Boolean generalValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if (name.isBlank() || !(name.matches("^[ a-zA-Z]*$"))){
                message.add("Name cannot be blank, contain digits or special characters. Please enter a valid name and try again");
            }
            if(!(emailId.matches("^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$"))) {
                message.add("Please enter a valid Email Address and try again");
            }
            if(age < 0 || age > 99){
            message.add("Please enter a valid Age (18-99) and try again");
            }
            if(gender == "Please Select a Gender"){
            message.add("Please enter a valid Gender and try again");
            }
            if(!(String.valueOf(phNo).matches("[0-9]{10}$"))){
            message.add("Please enter a valid 10 digit Phone No and try again");
            }
            if(password.length() <= 5){
            message.add("Please enter a valid password (must be more than 5 characters)");
            }
            if(role == "Please Select a Role"){
                message.add("Please select a Role and fill in the required fields");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }
        
        private Boolean patientValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if(pd.isUniqueEmail(emailId) == false){
                message.add("Email address already exists. Please enter a unique Email Address and try again");
            }
            if (height < 30.48 || height > 300){
                message.add("Please enter a valid height and try again");
            }
            if(weight < 7 || weight > 1500){
                message.add("Please enter a valid weight and try again");
            }
            if(city.isBlank() || !(city.matches("^[ a-zA-Z1-9]*$"))){
                message.add("City cannot be blank, contain digits or special characters. Please enter a valid city and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }
        
        private Boolean doctorValidation(){
            ArrayList message = null;
            message = new ArrayList(0);
            if(dd.isUniqueEmail(emailId) == false){
                message.add("Email address already exists. Please enter a unique Email Address and try again");
            }
            if(speciality.isBlank() || !(speciality.matches("^[ a-zA-Z]*$"))){
                message.add("Speciality cannot be blank, contain digits or special characters. Please enter a valid speciality and try again");
            }
            if(yearsOfExp < 0 || yearsOfExp > 30){
                message.add("Please enter a valid Years of Experience and try again");
            }
            if(hospital.isBlank() || !(hospital.matches("^[ a-zA-Z1-9]*$"))){
                message.add("Hospital name cannot be blank, contain digits or special characters. Please enter a valid hospital name and try again");
            }
            if(area.isBlank() || !(area.matches("^[ a-zA-Z1-9]*$"))){
                message.add("Area cannot be blank, contain digits or special characters. Please enter a valid area and try again");
            }
            if(!(message.isEmpty())){
            JOptionPane.showMessageDialog(this, message.toArray());
            message.clear();
            return false;
            }
            else{
                return true;
            }
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmailId;
    private javax.swing.JLabel lblEnterDetails;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblYearsOfExp;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtSpeciality;
    private javax.swing.JTextField txtWeight;
    private javax.swing.JTextField txtYearsOfExp;
    // End of variables declaration//GEN-END:variables
}
